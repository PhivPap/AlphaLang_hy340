State 136 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program stmt
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr ASTERISK expr
   17     | expr SLASH expr
   18     | expr MODULO expr
   19     | expr GREATER_THAN expr
   20     | expr GREATER_EQUAL expr
   21     | expr LESSER_THAN expr
   22     | expr LESSER_EQUAL expr

   23 $@1: %empty

   24 expr: expr EQUAL $@1 newllist expr

   25 $@2: %empty

   26 expr: expr UNEQUAL $@2 newllist expr

   27 $@3: %empty

   28 expr: expr AND $@3 newllist expr

   29 $@4: %empty

   30 expr: expr OR $@4 newllist expr
   31     | term

   32 term: ROUND_BR_O expr ROUND_BR_C
   33     | MINUS expr
   34     | NOT newllist expr
   35     | PLUS_PLUS lvalue
   36     | lvalue PLUS_PLUS
   37     | MINUS_MINUS lvalue
   38     | lvalue MINUS_MINUS
   39     | primary

   40 newllist: %empty

   41 assignexpr: lvalue ASSIGN expr

   42 primary: lvalue
   43        | call
   44        | objectdef
   45        | ROUND_BR_O funcdef ROUND_BR_C
   46        | const

   47 lvalue: ID
   48       | LOCAL ID
   49       | DBL_COLON ID
   50       | member

   51 member: lvalue PERIOD ID
   52       | lvalue SQUARE_BR_O expr SQUARE_BR_C
   53       | call PERIOD ID
   54       | call SQUARE_BR_O expr SQUARE_BR_C

   55 call: call normcall
   56     | lvalue callsuffix
   57     | ROUND_BR_O funcdef ROUND_BR_C normcall

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: ROUND_BR_O elist ROUND_BR_C

   61 $@5: %empty

   62 methodcall: DBL_PERIOD dummy ID $@5 ROUND_BR_O elist ROUND_BR_C

   63 dummy: %empty

   64 elist: elist COMMA expr
   65      | expr
   66      | %empty

   67 objectdef: SQUARE_BR_O objectdeftemp SQUARE_BR_C

   68 objectdeftemp: elist
   69              | indexed

   70 indexed: indexed COMMA indexedelem
   71        | indexedelem

   72 $@6: %empty

   73 indexedelem: CURLY_BR_O expr $@6 COLON expr CURLY_BR_C

   74 $@7: %empty

   75 block: CURLY_BR_O $@7 blocktemp CURLY_BR_C

   76 blocktemp: blocktemp stmt
   77          | %empty

   78 funcid: ID
   79       | %empty

   80 funcdef: funcdecl funcprefix funcargs block

   81 funcdecl: FUNCTION

   82 funcprefix: funcid

   83 $@8: %empty

   84 funcargs: ROUND_BR_O $@8 idlist ROUND_BR_C

   85 const: INTCONST
   86      | REALCONST
   87      | STRING
   88      | NIL
   89      | TRUE
   90      | FALSE

   91 idlist: idlist COMMA ID
   92       | ID
   93       | %empty

   94 $@9: %empty

   95 ifstmt: ifheader stmt $@9 elsestmt

   96 ifheader: IF ROUND_BR_O expr ROUND_BR_C

   97 elsestmt: elseheader stmt
   98         | %empty

   99 elseheader: ELSE

  100 whilestmt: whilestart whilecond stmt

  101 whilestart: WHILE

  102 whilecond: ROUND_BR_O expr ROUND_BR_C

  103 $@10: %empty

  104 $@11: %empty

  105 forstmt: FOR $@10 ROUND_BR_O forelist1 forexpr elist $@11 forstart stmt

  106 forelist1: elist SEMICOLON

  107 forexpr: expr SEMICOLON

  108 forstart: ROUND_BR_C

  109 returnstmt: RETURN optionalexpr SEMICOLON

  110 optionalexpr: expr
  111             | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF <tok> (258) 96
    ELSE <tok> (259) 99
    WHILE <tok> (260) 101
    FOR <tok> (261) 105
    FUNCTION <tok> (262) 81
    RETURN <tok> (263) 109
    BREAK <tok> (264) 8
    CONTINUE <tok> (265) 9
    LOCAL <tok> (266) 48
    TRUE <tok> (267) 89
    FALSE <tok> (268) 90
    NIL <tok> (269) 88
    INTCONST <tok> (270) 85
    REALCONST <tok> (271) 86
    STRING <tok> (272) 87
    ID <tok> (273) 47 48 49 51 53 62 78 91 92
    CURLY_BR_O <tok> (274) 73 75
    CURLY_BR_C <tok> (275) 73 75
    COLON <tok> (276) 73
    COMMA <tok> (277) 64 70 91
    DBL_COLON <tok> (278) 49
    SEMICOLON <tok> (279) 3 8 9 12 106 107 109
    ASSIGN <tok> (280) 41
    OR <tok> (281) 30
    AND <tok> (282) 28
    EQUAL <tok> (283) 24
    UNEQUAL <tok> (284) 26
    GREATER_THAN <tok> (285) 19
    GREATER_EQUAL <tok> (286) 20
    LESSER_THAN <tok> (287) 21
    LESSER_EQUAL <tok> (288) 22
    PLUS <tok> (289) 14
    MINUS <tok> (290) 15 33
    ASTERISK <tok> (291) 16
    SLASH <tok> (292) 17
    MODULO <tok> (293) 18
    NOT <tok> (294) 34
    PLUS_PLUS <tok> (295) 35 36
    MINUS_MINUS <tok> (296) 37 38
    UMINUS <tok> (297)
    PERIOD <tok> (298) 51 53
    DBL_PERIOD <tok> (299) 62
    SQUARE_BR_O <tok> (300) 52 54 67
    SQUARE_BR_C <tok> (301) 52 54 67
    ROUND_BR_O <tok> (302) 32 45 57 60 62 84 96 102 105
    ROUND_BR_C <tok> (303) 32 45 57 60 62 84 96 102 108


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0 1
    stmt (51)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 1 76 95 97 100 105
    expr <expr> (52)
        on left: 13 14 15 16 17 18 19 20 21 22 24 26 28 30 31
        on right: 3 14 15 16 17 18 19 20 21 22 24 26 28 30 32 33 34 41 52 54 64 65 73 96 102 107 110
    $@1 (53)
        on left: 23
        on right: 24
    $@2 (54)
        on left: 25
        on right: 26
    $@3 (55)
        on left: 27
        on right: 28
    $@4 (56)
        on left: 29
        on right: 30
    term <expr> (57)
        on left: 32 33 34 35 36 37 38 39
        on right: 31
    newllist <llist> (58)
        on left: 40
        on right: 24 26 28 30 34
    assignexpr <expr> (59)
        on left: 41
        on right: 13
    primary <expr> (60)
        on left: 42 43 44 45 46
        on right: 39
    lvalue <expr> (61)
        on left: 47 48 49 50
        on right: 35 36 37 38 41 42 51 52 56
    member <expr> (62)
        on left: 51 52 53 54
        on right: 50
    call <expr> (63)
        on left: 55 56 57
        on right: 43 53 54 55
    callsuffix <cnode> (64)
        on left: 58 59
        on right: 56
    normcall <cnode> (65)
        on left: 60
        on right: 55 57 58
    methodcall <cnode> (66)
        on left: 62
        on right: 59
    $@5 (67)
        on left: 61
        on right: 62
    dummy <cnode> (68)
        on left: 63
        on right: 62
    elist <expr> (69)
        on left: 64 65 66
        on right: 60 62 64 68 105 106
    objectdef <expr> (70)
        on left: 67
        on right: 44
    objectdeftemp <expr> (71)
        on left: 68 69
        on right: 67
    indexed <idxpair> (72)
        on left: 70 71
        on right: 69 70
    indexedelem <idxpair> (73)
        on left: 73
        on right: 70 71
    $@6 (74)
        on left: 72
        on right: 73
    block <intval> (75)
        on left: 75
        on right: 10 80
    $@7 (76)
        on left: 74
        on right: 75
    blocktemp (77)
        on left: 76 77
        on right: 75 76
    funcid <expr> (78)
        on left: 78 79
        on right: 82
    funcdef <expr> (79)
        on left: 80
        on right: 11 45 57
    funcdecl <intval> (80)
        on left: 81
        on right: 80
    funcprefix <expr> (81)
        on left: 82
        on right: 80
    funcargs (82)
        on left: 84
        on right: 80
    $@8 (83)
        on left: 83
        on right: 84
    const <expr> (84)
        on left: 85 86 87 88 89 90
        on right: 46
    idlist (85)
        on left: 91 92 93
        on right: 84 91
    ifstmt (86)
        on left: 95
        on right: 4
    $@9 (87)
        on left: 94
        on right: 95
    ifheader <intval> (88)
        on left: 96
        on right: 95
    elsestmt <intval> (89)
        on left: 97 98
        on right: 95
    elseheader <intval> (90)
        on left: 99
        on right: 97
    whilestmt (91)
        on left: 100
        on right: 5
    whilestart <intval> (92)
        on left: 101
        on right: 100
    whilecond <intval> (93)
        on left: 102
        on right: 100
    forstmt (94)
        on left: 105
        on right: 6
    $@10 (95)
        on left: 103
        on right: 105
    $@11 (96)
        on left: 104
        on right: 105
    forelist1 <intval> (97)
        on left: 106
        on right: 105
    forexpr <intval> (98)
        on left: 107
        on right: 105
    forstart <intval> (99)
        on left: 108
        on right: 105
    returnstmt (100)
        on left: 109
        on right: 7
    optionalexpr <expr> (101)
        on left: 110 111
        on right: 109


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stmt

    $end         shift, and go to state 2
    IF           shift, and go to state 3
    WHILE        shift, and go to state 4
    FOR          shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    CURLY_BR_O   shift, and go to state 18
    DBL_COLON    shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    funcdecl    go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifheader    go to state 41
    whilestmt   go to state 42
    whilestart  go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 2

    0 $accept: program $end .

    $default  accept


State 3

   96 ifheader: IF . ROUND_BR_O expr ROUND_BR_C

    ROUND_BR_O  shift, and go to state 46


State 4

  101 whilestart: WHILE .

    $default  reduce using rule 101 (whilestart)


State 5

  105 forstmt: FOR . $@10 ROUND_BR_O forelist1 forexpr elist $@11 forstart stmt

    $default  reduce using rule 103 ($@10)

    $@10  go to state 47


State 6

   81 funcdecl: FUNCTION .

    $default  reduce using rule 81 (funcdecl)


State 7

  109 returnstmt: RETURN . optionalexpr SEMICOLON

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    $default  reduce using rule 111 (optionalexpr)

    expr          go to state 48
    term          go to state 29
    assignexpr    go to state 30
    primary       go to state 31
    lvalue        go to state 32
    member        go to state 33
    call          go to state 34
    objectdef     go to state 35
    const         go to state 39
    optionalexpr  go to state 49


State 8

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 9

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 10

   48 lvalue: LOCAL . ID

    ID  shift, and go to state 52


State 11

   89 const: TRUE .

    $default  reduce using rule 89 (const)


State 12

   90 const: FALSE .

    $default  reduce using rule 90 (const)


State 13

   88 const: NIL .

    $default  reduce using rule 88 (const)


State 14

   85 const: INTCONST .

    $default  reduce using rule 85 (const)


State 15

   86 const: REALCONST .

    $default  reduce using rule 86 (const)


State 16

   87 const: STRING .

    $default  reduce using rule 87 (const)


State 17

   47 lvalue: ID .

    $default  reduce using rule 47 (lvalue)


State 18

   75 block: CURLY_BR_O . $@7 blocktemp CURLY_BR_C

    $default  reduce using rule 74 ($@7)

    $@7  go to state 53


State 19

   49 lvalue: DBL_COLON . ID

    ID  shift, and go to state 54


State 20

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 21

   33 term: MINUS . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 55
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 22

   34 term: NOT . newllist expr

    $default  reduce using rule 40 (newllist)

    newllist  go to state 56


State 23

   35 term: PLUS_PLUS . lvalue

    LOCAL       shift, and go to state 10
    ID          shift, and go to state 17
    DBL_COLON   shift, and go to state 19
    ROUND_BR_O  shift, and go to state 57

    lvalue  go to state 58
    member  go to state 33
    call    go to state 59


State 24

   37 term: MINUS_MINUS . lvalue

    LOCAL       shift, and go to state 10
    ID          shift, and go to state 17
    DBL_COLON   shift, and go to state 19
    ROUND_BR_O  shift, and go to state 57

    lvalue  go to state 60
    member  go to state 33
    call    go to state 59


State 25

   67 objectdef: SQUARE_BR_O . objectdeftemp SQUARE_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    CURLY_BR_O   shift, and go to state 61
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    $default  reduce using rule 66 (elist)

    expr           go to state 62
    term           go to state 29
    assignexpr     go to state 30
    primary        go to state 31
    lvalue         go to state 32
    member         go to state 33
    call           go to state 34
    elist          go to state 63
    objectdef      go to state 35
    objectdeftemp  go to state 64
    indexed        go to state 65
    indexedelem    go to state 66
    const          go to state 39


State 26

   32 term: ROUND_BR_O . expr ROUND_BR_C
   45 primary: ROUND_BR_O . funcdef ROUND_BR_C
   57 call: ROUND_BR_O . funcdef ROUND_BR_C normcall

    FUNCTION     shift, and go to state 6
    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 68
    funcdecl    go to state 38
    const       go to state 39


State 27

    1 program: program stmt .

    $default  reduce using rule 1 (program)


State 28

    3 stmt: expr . SEMICOLON
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    SEMICOLON      shift, and go to state 69
    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82


State 29

   31 expr: term .

    $default  reduce using rule 31 (expr)


State 30

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


State 31

   39 term: primary .

    $default  reduce using rule 39 (term)


State 32

   36 term: lvalue . PLUS_PLUS
   38     | lvalue . MINUS_MINUS
   41 assignexpr: lvalue . ASSIGN expr
   42 primary: lvalue .
   51 member: lvalue . PERIOD ID
   52       | lvalue . SQUARE_BR_O expr SQUARE_BR_C
   56 call: lvalue . callsuffix

    ASSIGN       shift, and go to state 83
    PLUS_PLUS    shift, and go to state 84
    MINUS_MINUS  shift, and go to state 85
    PERIOD       shift, and go to state 86
    DBL_PERIOD   shift, and go to state 87
    SQUARE_BR_O  shift, and go to state 88
    ROUND_BR_O   shift, and go to state 89

    $default  reduce using rule 42 (primary)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 33

   50 lvalue: member .

    $default  reduce using rule 50 (lvalue)


State 34

   43 primary: call .
   53 member: call . PERIOD ID
   54       | call . SQUARE_BR_O expr SQUARE_BR_C
   55 call: call . normcall

    PERIOD       shift, and go to state 93
    SQUARE_BR_O  shift, and go to state 94
    ROUND_BR_O   shift, and go to state 89

    $default  reduce using rule 43 (primary)

    normcall  go to state 95


State 35

   44 primary: objectdef .

    $default  reduce using rule 44 (primary)


State 36

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 37

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 38

   80 funcdef: funcdecl . funcprefix funcargs block

    ID  shift, and go to state 96

    $default  reduce using rule 79 (funcid)

    funcid      go to state 97
    funcprefix  go to state 98


State 39

   46 primary: const .

    $default  reduce using rule 46 (primary)


State 40

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 41

   95 ifstmt: ifheader . stmt $@9 elsestmt

    IF           shift, and go to state 3
    WHILE        shift, and go to state 4
    FOR          shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    CURLY_BR_O   shift, and go to state 18
    DBL_COLON    shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    stmt        go to state 99
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    funcdecl    go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifheader    go to state 41
    whilestmt   go to state 42
    whilestart  go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 42

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 43

  100 whilestmt: whilestart . whilecond stmt

    ROUND_BR_O  shift, and go to state 100

    whilecond  go to state 101


State 44

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 45

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 46

   96 ifheader: IF ROUND_BR_O . expr ROUND_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 102
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 47

  105 forstmt: FOR $@10 . ROUND_BR_O forelist1 forexpr elist $@11 forstart stmt

    ROUND_BR_O  shift, and go to state 103


State 48

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
  110 optionalexpr: expr .

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    $default  reduce using rule 110 (optionalexpr)


State 49

  109 returnstmt: RETURN optionalexpr . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 50

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 51

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 52

   48 lvalue: LOCAL ID .

    $default  reduce using rule 48 (lvalue)


State 53

   75 block: CURLY_BR_O $@7 . blocktemp CURLY_BR_C

    $default  reduce using rule 77 (blocktemp)

    blocktemp  go to state 105


State 54

   49 lvalue: DBL_COLON ID .

    $default  reduce using rule 49 (lvalue)


State 55

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   33 term: MINUS expr .

    $default  reduce using rule 33 (term)


State 56

   34 term: NOT newllist . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 106
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 57

   57 call: ROUND_BR_O . funcdef ROUND_BR_C normcall

    FUNCTION  shift, and go to state 6

    funcdef   go to state 107
    funcdecl  go to state 38


State 58

   35 term: PLUS_PLUS lvalue .
   51 member: lvalue . PERIOD ID
   52       | lvalue . SQUARE_BR_O expr SQUARE_BR_C
   56 call: lvalue . callsuffix

    PERIOD       shift, and go to state 86
    DBL_PERIOD   shift, and go to state 87
    SQUARE_BR_O  shift, and go to state 88
    ROUND_BR_O   shift, and go to state 89

    $default  reduce using rule 35 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 59

   53 member: call . PERIOD ID
   54       | call . SQUARE_BR_O expr SQUARE_BR_C
   55 call: call . normcall

    PERIOD       shift, and go to state 93
    SQUARE_BR_O  shift, and go to state 94
    ROUND_BR_O   shift, and go to state 89

    normcall  go to state 95


State 60

   37 term: MINUS_MINUS lvalue .
   51 member: lvalue . PERIOD ID
   52       | lvalue . SQUARE_BR_O expr SQUARE_BR_C
   56 call: lvalue . callsuffix

    PERIOD       shift, and go to state 86
    DBL_PERIOD   shift, and go to state 87
    SQUARE_BR_O  shift, and go to state 88
    ROUND_BR_O   shift, and go to state 89

    $default  reduce using rule 37 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 61

   73 indexedelem: CURLY_BR_O . expr $@6 COLON expr CURLY_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 108
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 62

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   65 elist: expr .

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    $default  reduce using rule 65 (elist)


State 63

   64 elist: elist . COMMA expr
   68 objectdeftemp: elist .

    COMMA  shift, and go to state 109

    $default  reduce using rule 68 (objectdeftemp)


State 64

   67 objectdef: SQUARE_BR_O objectdeftemp . SQUARE_BR_C

    SQUARE_BR_C  shift, and go to state 110


State 65

   69 objectdeftemp: indexed .
   70 indexed: indexed . COMMA indexedelem

    COMMA  shift, and go to state 111

    $default  reduce using rule 69 (objectdeftemp)


State 66

   71 indexed: indexedelem .

    $default  reduce using rule 71 (indexed)


State 67

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   32 term: ROUND_BR_O expr . ROUND_BR_C

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82
    ROUND_BR_C     shift, and go to state 112


State 68

   45 primary: ROUND_BR_O funcdef . ROUND_BR_C
   57 call: ROUND_BR_O funcdef . ROUND_BR_C normcall

    ROUND_BR_C  shift, and go to state 113


State 69

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 70

   30 expr: expr OR . $@4 newllist expr

    $default  reduce using rule 29 ($@4)

    $@4  go to state 114


State 71

   28 expr: expr AND . $@3 newllist expr

    $default  reduce using rule 27 ($@3)

    $@3  go to state 115


State 72

   24 expr: expr EQUAL . $@1 newllist expr

    $default  reduce using rule 23 ($@1)

    $@1  go to state 116


State 73

   26 expr: expr UNEQUAL . $@2 newllist expr

    $default  reduce using rule 25 ($@2)

    $@2  go to state 117


State 74

   19 expr: expr GREATER_THAN . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 75

   20 expr: expr GREATER_EQUAL . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 76

   21 expr: expr LESSER_THAN . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 77

   22 expr: expr LESSER_EQUAL . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 78

   14 expr: expr PLUS . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 79

   15 expr: expr MINUS . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 80

   16 expr: expr ASTERISK . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 81

   17 expr: expr SLASH . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 82

   18 expr: expr MODULO . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 83

   41 assignexpr: lvalue ASSIGN . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 84

   36 term: lvalue PLUS_PLUS .

    $default  reduce using rule 36 (term)


State 85

   38 term: lvalue MINUS_MINUS .

    $default  reduce using rule 38 (term)


State 86

   51 member: lvalue PERIOD . ID

    ID  shift, and go to state 128


State 87

   62 methodcall: DBL_PERIOD . dummy ID $@5 ROUND_BR_O elist ROUND_BR_C

    $default  reduce using rule 63 (dummy)

    dummy  go to state 129


State 88

   52 member: lvalue SQUARE_BR_O . expr SQUARE_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 89

   60 normcall: ROUND_BR_O . elist ROUND_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    $default  reduce using rule 66 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 131
    objectdef   go to state 35
    const       go to state 39


State 90

   56 call: lvalue callsuffix .

    $default  reduce using rule 56 (call)


State 91

   58 callsuffix: normcall .

    $default  reduce using rule 58 (callsuffix)


State 92

   59 callsuffix: methodcall .

    $default  reduce using rule 59 (callsuffix)


State 93

   53 member: call PERIOD . ID

    ID  shift, and go to state 132


State 94

   54 member: call SQUARE_BR_O . expr SQUARE_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 95

   55 call: call normcall .

    $default  reduce using rule 55 (call)


State 96

   78 funcid: ID .

    $default  reduce using rule 78 (funcid)


State 97

   82 funcprefix: funcid .

    $default  reduce using rule 82 (funcprefix)


State 98

   80 funcdef: funcdecl funcprefix . funcargs block

    ROUND_BR_O  shift, and go to state 134

    funcargs  go to state 135


State 99

   95 ifstmt: ifheader stmt . $@9 elsestmt

    $default  reduce using rule 94 ($@9)

    $@9  go to state 136


State 100

  102 whilecond: ROUND_BR_O . expr ROUND_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 137
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 101

  100 whilestmt: whilestart whilecond . stmt

    IF           shift, and go to state 3
    WHILE        shift, and go to state 4
    FOR          shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    CURLY_BR_O   shift, and go to state 18
    DBL_COLON    shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    stmt        go to state 138
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    funcdecl    go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifheader    go to state 41
    whilestmt   go to state 42
    whilestart  go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 102

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   96 ifheader: IF ROUND_BR_O expr . ROUND_BR_C

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82
    ROUND_BR_C     shift, and go to state 139


State 103

  105 forstmt: FOR $@10 ROUND_BR_O . forelist1 forexpr elist $@11 forstart stmt

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    $default  reduce using rule 66 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 140
    objectdef   go to state 35
    const       go to state 39
    forelist1   go to state 141


State 104

  109 returnstmt: RETURN optionalexpr SEMICOLON .

    $default  reduce using rule 109 (returnstmt)


State 105

   75 block: CURLY_BR_O $@7 blocktemp . CURLY_BR_C
   76 blocktemp: blocktemp . stmt

    IF           shift, and go to state 3
    WHILE        shift, and go to state 4
    FOR          shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    CURLY_BR_O   shift, and go to state 18
    CURLY_BR_C   shift, and go to state 142
    DBL_COLON    shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    stmt        go to state 143
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    funcdecl    go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifheader    go to state 41
    whilestmt   go to state 42
    whilestart  go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 106

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   34 term: NOT newllist expr .

    $default  reduce using rule 34 (term)


State 107

   57 call: ROUND_BR_O funcdef . ROUND_BR_C normcall

    ROUND_BR_C  shift, and go to state 144


State 108

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   73 indexedelem: CURLY_BR_O expr . $@6 COLON expr CURLY_BR_C

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    $default  reduce using rule 72 ($@6)

    $@6  go to state 145


State 109

   64 elist: elist COMMA . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 146
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 110

   67 objectdef: SQUARE_BR_O objectdeftemp SQUARE_BR_C .

    $default  reduce using rule 67 (objectdef)


State 111

   70 indexed: indexed COMMA . indexedelem

    CURLY_BR_O  shift, and go to state 61

    indexedelem  go to state 147


State 112

   32 term: ROUND_BR_O expr ROUND_BR_C .

    $default  reduce using rule 32 (term)


State 113

   45 primary: ROUND_BR_O funcdef ROUND_BR_C .
   57 call: ROUND_BR_O funcdef ROUND_BR_C . normcall

    ROUND_BR_O  shift, and go to state 89

    $default  reduce using rule 45 (primary)

    normcall  go to state 148


State 114

   30 expr: expr OR $@4 . newllist expr

    $default  reduce using rule 40 (newllist)

    newllist  go to state 149


State 115

   28 expr: expr AND $@3 . newllist expr

    $default  reduce using rule 40 (newllist)

    newllist  go to state 150


State 116

   24 expr: expr EQUAL $@1 . newllist expr

    $default  reduce using rule 40 (newllist)

    newllist  go to state 151


State 117

   26 expr: expr UNEQUAL $@2 . newllist expr

    $default  reduce using rule 40 (newllist)

    newllist  go to state 152


State 118

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   19     | expr GREATER_THAN expr .
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    ASTERISK  shift, and go to state 80
    SLASH     shift, and go to state 81
    MODULO    shift, and go to state 82

    GREATER_THAN   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESSER_THAN    error (nonassociative)
    LESSER_EQUAL   error (nonassociative)

    $default  reduce using rule 19 (expr)


State 119

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   20     | expr GREATER_EQUAL expr .
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    ASTERISK  shift, and go to state 80
    SLASH     shift, and go to state 81
    MODULO    shift, and go to state 82

    GREATER_THAN   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESSER_THAN    error (nonassociative)
    LESSER_EQUAL   error (nonassociative)

    $default  reduce using rule 20 (expr)


State 120

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   21     | expr LESSER_THAN expr .
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    ASTERISK  shift, and go to state 80
    SLASH     shift, and go to state 81
    MODULO    shift, and go to state 82

    GREATER_THAN   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESSER_THAN    error (nonassociative)
    LESSER_EQUAL   error (nonassociative)

    $default  reduce using rule 21 (expr)


State 121

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   22     | expr LESSER_EQUAL expr .
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    ASTERISK  shift, and go to state 80
    SLASH     shift, and go to state 81
    MODULO    shift, and go to state 82

    GREATER_THAN   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESSER_THAN    error (nonassociative)
    LESSER_EQUAL   error (nonassociative)

    $default  reduce using rule 22 (expr)


State 122

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    ASTERISK  shift, and go to state 80
    SLASH     shift, and go to state 81
    MODULO    shift, and go to state 82

    $default  reduce using rule 14 (expr)


State 123

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    ASTERISK  shift, and go to state 80
    SLASH     shift, and go to state 81
    MODULO    shift, and go to state 82

    $default  reduce using rule 15 (expr)


State 124

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   16     | expr ASTERISK expr .
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    $default  reduce using rule 16 (expr)


State 125

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   17     | expr SLASH expr .
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    $default  reduce using rule 17 (expr)


State 126

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   18     | expr MODULO expr .
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    $default  reduce using rule 18 (expr)


State 127

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   41 assignexpr: lvalue ASSIGN expr .

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    $default  reduce using rule 41 (assignexpr)


State 128

   51 member: lvalue PERIOD ID .

    $default  reduce using rule 51 (member)


State 129

   62 methodcall: DBL_PERIOD dummy . ID $@5 ROUND_BR_O elist ROUND_BR_C

    ID  shift, and go to state 153


State 130

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   52 member: lvalue SQUARE_BR_O expr . SQUARE_BR_C

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82
    SQUARE_BR_C    shift, and go to state 154


State 131

   60 normcall: ROUND_BR_O elist . ROUND_BR_C
   64 elist: elist . COMMA expr

    COMMA       shift, and go to state 109
    ROUND_BR_C  shift, and go to state 155


State 132

   53 member: call PERIOD ID .

    $default  reduce using rule 53 (member)


State 133

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   54 member: call SQUARE_BR_O expr . SQUARE_BR_C

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82
    SQUARE_BR_C    shift, and go to state 156


State 134

   84 funcargs: ROUND_BR_O . $@8 idlist ROUND_BR_C

    $default  reduce using rule 83 ($@8)

    $@8  go to state 157


State 135

   80 funcdef: funcdecl funcprefix funcargs . block

    CURLY_BR_O  shift, and go to state 18

    block  go to state 158


State 136

   95 ifstmt: ifheader stmt $@9 . elsestmt

    ELSE  shift, and go to state 159

    ELSE      [reduce using rule 98 (elsestmt)]
    $default  reduce using rule 98 (elsestmt)

    elsestmt    go to state 160
    elseheader  go to state 161


State 137

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
  102 whilecond: ROUND_BR_O expr . ROUND_BR_C

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82
    ROUND_BR_C     shift, and go to state 162


State 138

  100 whilestmt: whilestart whilecond stmt .

    $default  reduce using rule 100 (whilestmt)


State 139

   96 ifheader: IF ROUND_BR_O expr ROUND_BR_C .

    $default  reduce using rule 96 (ifheader)


State 140

   64 elist: elist . COMMA expr
  106 forelist1: elist . SEMICOLON

    COMMA      shift, and go to state 109
    SEMICOLON  shift, and go to state 163


State 141

  105 forstmt: FOR $@10 ROUND_BR_O forelist1 . forexpr elist $@11 forstart stmt

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 164
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39
    forexpr     go to state 165


State 142

   75 block: CURLY_BR_O $@7 blocktemp CURLY_BR_C .

    $default  reduce using rule 75 (block)


State 143

   76 blocktemp: blocktemp stmt .

    $default  reduce using rule 76 (blocktemp)


State 144

   57 call: ROUND_BR_O funcdef ROUND_BR_C . normcall

    ROUND_BR_O  shift, and go to state 89

    normcall  go to state 148


State 145

   73 indexedelem: CURLY_BR_O expr $@6 . COLON expr CURLY_BR_C

    COLON  shift, and go to state 166


State 146

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   64 elist: elist COMMA expr .

    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    $default  reduce using rule 64 (elist)


State 147

   70 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 70 (indexed)


State 148

   57 call: ROUND_BR_O funcdef ROUND_BR_C normcall .

    $default  reduce using rule 57 (call)


State 149

   30 expr: expr OR $@4 newllist . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 167
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 150

   28 expr: expr AND $@3 newllist . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 168
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 151

   24 expr: expr EQUAL $@1 newllist . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 169
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 152

   26 expr: expr UNEQUAL $@2 newllist . expr

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 170
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 153

   62 methodcall: DBL_PERIOD dummy ID . $@5 ROUND_BR_O elist ROUND_BR_C

    $default  reduce using rule 61 ($@5)

    $@5  go to state 171


State 154

   52 member: lvalue SQUARE_BR_O expr SQUARE_BR_C .

    $default  reduce using rule 52 (member)


State 155

   60 normcall: ROUND_BR_O elist ROUND_BR_C .

    $default  reduce using rule 60 (normcall)


State 156

   54 member: call SQUARE_BR_O expr SQUARE_BR_C .

    $default  reduce using rule 54 (member)


State 157

   84 funcargs: ROUND_BR_O $@8 . idlist ROUND_BR_C

    ID  shift, and go to state 172

    $default  reduce using rule 93 (idlist)

    idlist  go to state 173


State 158

   80 funcdef: funcdecl funcprefix funcargs block .

    $default  reduce using rule 80 (funcdef)


State 159

   99 elseheader: ELSE .

    $default  reduce using rule 99 (elseheader)


State 160

   95 ifstmt: ifheader stmt $@9 elsestmt .

    $default  reduce using rule 95 (ifstmt)


State 161

   97 elsestmt: elseheader . stmt

    IF           shift, and go to state 3
    WHILE        shift, and go to state 4
    FOR          shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    CURLY_BR_O   shift, and go to state 18
    DBL_COLON    shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    stmt        go to state 174
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    funcdecl    go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifheader    go to state 41
    whilestmt   go to state 42
    whilestart  go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 162

  102 whilecond: ROUND_BR_O expr ROUND_BR_C .

    $default  reduce using rule 102 (whilecond)


State 163

  106 forelist1: elist SEMICOLON .

    $default  reduce using rule 106 (forelist1)


State 164

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
  107 forexpr: expr . SEMICOLON

    SEMICOLON      shift, and go to state 175
    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82


State 165

  105 forstmt: FOR $@10 ROUND_BR_O forelist1 forexpr . elist $@11 forstart stmt

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    $default  reduce using rule 66 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 176
    objectdef   go to state 35
    const       go to state 39


State 166

   73 indexedelem: CURLY_BR_O expr $@6 COLON . expr CURLY_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    expr        go to state 177
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 167

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   30     | expr OR $@4 newllist expr .

    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    $default  reduce using rule 30 (expr)


State 168

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   28     | expr AND $@3 newllist expr .
   30     | expr . OR $@4 newllist expr

    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    $default  reduce using rule 28 (expr)


State 169

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   24     | expr EQUAL $@1 newllist expr .
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    EQUAL    error (nonassociative)
    UNEQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 170

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   26     | expr UNEQUAL $@2 newllist expr .
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr

    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82

    EQUAL    error (nonassociative)
    UNEQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 171

   62 methodcall: DBL_PERIOD dummy ID $@5 . ROUND_BR_O elist ROUND_BR_C

    ROUND_BR_O  shift, and go to state 178


State 172

   92 idlist: ID .

    $default  reduce using rule 92 (idlist)


State 173

   84 funcargs: ROUND_BR_O $@8 idlist . ROUND_BR_C
   91 idlist: idlist . COMMA ID

    COMMA       shift, and go to state 179
    ROUND_BR_C  shift, and go to state 180


State 174

   97 elsestmt: elseheader stmt .

    $default  reduce using rule 97 (elsestmt)


State 175

  107 forexpr: expr SEMICOLON .

    $default  reduce using rule 107 (forexpr)


State 176

   64 elist: elist . COMMA expr
  105 forstmt: FOR $@10 ROUND_BR_O forelist1 forexpr elist . $@11 forstart stmt

    COMMA  shift, and go to state 109

    $default  reduce using rule 104 ($@11)

    $@11  go to state 181


State 177

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . ASTERISK expr
   17     | expr . SLASH expr
   18     | expr . MODULO expr
   19     | expr . GREATER_THAN expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESSER_THAN expr
   22     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL $@1 newllist expr
   26     | expr . UNEQUAL $@2 newllist expr
   28     | expr . AND $@3 newllist expr
   30     | expr . OR $@4 newllist expr
   73 indexedelem: CURLY_BR_O expr $@6 COLON expr . CURLY_BR_C

    CURLY_BR_C     shift, and go to state 182
    OR             shift, and go to state 70
    AND            shift, and go to state 71
    EQUAL          shift, and go to state 72
    UNEQUAL        shift, and go to state 73
    GREATER_THAN   shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESSER_THAN    shift, and go to state 76
    LESSER_EQUAL   shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    ASTERISK       shift, and go to state 80
    SLASH          shift, and go to state 81
    MODULO         shift, and go to state 82


State 178

   62 methodcall: DBL_PERIOD dummy ID $@5 ROUND_BR_O . elist ROUND_BR_C

    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    DBL_COLON    shift, and go to state 19
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    $default  reduce using rule 66 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 183
    objectdef   go to state 35
    const       go to state 39


State 179

   91 idlist: idlist COMMA . ID

    ID  shift, and go to state 184


State 180

   84 funcargs: ROUND_BR_O $@8 idlist ROUND_BR_C .

    $default  reduce using rule 84 (funcargs)


State 181

  105 forstmt: FOR $@10 ROUND_BR_O forelist1 forexpr elist $@11 . forstart stmt

    ROUND_BR_C  shift, and go to state 185

    forstart  go to state 186


State 182

   73 indexedelem: CURLY_BR_O expr $@6 COLON expr CURLY_BR_C .

    $default  reduce using rule 73 (indexedelem)


State 183

   62 methodcall: DBL_PERIOD dummy ID $@5 ROUND_BR_O elist . ROUND_BR_C
   64 elist: elist . COMMA expr

    COMMA       shift, and go to state 109
    ROUND_BR_C  shift, and go to state 187


State 184

   91 idlist: idlist COMMA ID .

    $default  reduce using rule 91 (idlist)


State 185

  108 forstart: ROUND_BR_C .

    $default  reduce using rule 108 (forstart)


State 186

  105 forstmt: FOR $@10 ROUND_BR_O forelist1 forexpr elist $@11 forstart . stmt

    IF           shift, and go to state 3
    WHILE        shift, and go to state 4
    FOR          shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    LOCAL        shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    NIL          shift, and go to state 13
    INTCONST     shift, and go to state 14
    REALCONST    shift, and go to state 15
    STRING       shift, and go to state 16
    ID           shift, and go to state 17
    CURLY_BR_O   shift, and go to state 18
    DBL_COLON    shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    MINUS        shift, and go to state 21
    NOT          shift, and go to state 22
    PLUS_PLUS    shift, and go to state 23
    MINUS_MINUS  shift, and go to state 24
    SQUARE_BR_O  shift, and go to state 25
    ROUND_BR_O   shift, and go to state 26

    stmt        go to state 188
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    funcdecl    go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifheader    go to state 41
    whilestmt   go to state 42
    whilestart  go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 187

   62 methodcall: DBL_PERIOD dummy ID $@5 ROUND_BR_O elist ROUND_BR_C .

    $default  reduce using rule 62 (methodcall)


State 188

  105 forstmt: FOR $@10 ROUND_BR_O forelist1 forexpr elist $@11 forstart stmt .

    $default  reduce using rule 105 (forstmt)
